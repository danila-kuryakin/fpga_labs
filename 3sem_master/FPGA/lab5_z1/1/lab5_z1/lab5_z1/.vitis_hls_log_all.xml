<?xml version="1.0" encoding="UTF-8"?>
<vivadoHLSLog:LogRoot xmlns:vivadoHLSLog="www.xilinx.com/vivadoHLSLog">
  <errorLogs>
    <logs>
      <synLog/>
      <simLog>
        <logs message="ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***" projectName="lab5_z1" solutionName="sol1" date="2022-11-12T18:41:08.372+0300"/>
        <logs message="ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***" projectName="lab5_z1" solutionName="sol1" date="2022-11-12T18:41:08.283+0300"/>
        <logs message="ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim." projectName="lab5_z1" solutionName="sol1" date="2022-11-12T18:41:08.268+0300"/>
        <logs message="ERROR: [COSIM 212-359] Aborting co-simulation: C TB simulation failed, nonzero return value '1'." projectName="lab5_z1" solutionName="sol1" date="2022-11-12T18:41:08.241+0300"/>
      </simLog>
      <mgLog/>
      <packageLog/>
      <csimLog/>
    </logs>
  </errorLogs>
  <warningLogs>
    <logs>
      <synLog>
        <logs message="WARNING: [HLS 200-786] Detected dataflow-on-top in function  'foo_m' (./source/lab5_z1.c:16)  with default interface mode 'ap_ctrl_hs'. Overlapped execution of successive kernel calls will not happen unless interface mode 'ap_ctrl_chain' is used (or 'ap_ctrl_none' for a purely data-driven design).&#xD;&#xA;Resolution: For help on HLS 200-786 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.2;t=hls+guidance;d=200-786.html" projectName="lab5_z1" solutionName="fifo" date="2022-11-10T01:04:35.613+0300" type="Warning"/>
        <logs message="WARNING: [HLS 200-471] Dataflow form checks found 3 issue(s) in file ./source/lab5_z1.c&#xD;&#xA;Resolution: For help on HLS 200-471 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.2;t=hls+guidance;d=200-471.html" projectName="lab5_z1" solutionName="fifo" date="2022-11-10T01:04:31.636+0300" type="Warning"/>
        <logs message="WARNING: [HLS 214-114] Since the only kind of statements allowed in a canonical dataflow region are variable declarations and function calls, the compiler may not be able to correctly handle the region (./source/lab5_z1.c:39:1)&#xD;&#xA;Resolution: For help on HLS 214-114 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.2;t=hls+guidance;d=214-114.html" projectName="lab5_z1" solutionName="fifo" date="2022-11-10T01:04:31.510+0300" type="Warning"/>
        <logs message="WARNING: [HLS 214-114] Since the only kind of statements allowed in a canonical dataflow region are variable declarations and function calls, the compiler may not be able to correctly handle the region (./source/lab5_z1.c:31:1)&#xD;&#xA;Resolution: For help on HLS 214-114 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.2;t=hls+guidance;d=214-114.html" projectName="lab5_z1" solutionName="fifo" date="2022-11-10T01:04:31.501+0300" type="Warning"/>
        <logs message="WARNING: [HLS 214-114] Since the only kind of statements allowed in a canonical dataflow region are variable declarations and function calls, the compiler may not be able to correctly handle the region (./source/lab5_z1.c:20:1)&#xD;&#xA;Resolution: For help on HLS 214-114 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.2;t=hls+guidance;d=214-114.html" projectName="lab5_z1" solutionName="fifo" date="2022-11-10T01:04:31.489+0300" type="Warning"/>
        <logs message="WARNING: [HLS 200-786] Detected dataflow-on-top in function  'foo_m' (./source/lab5_z1.c:16)  with default interface mode 'ap_ctrl_hs'. Overlapped execution of successive kernel calls will not happen unless interface mode 'ap_ctrl_chain' is used (or 'ap_ctrl_none' for a purely data-driven design).&#xD;&#xA;Resolution: For help on HLS 200-786 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.2;t=hls+guidance;d=200-786.html" projectName="lab5_z1" solutionName="pingpong" date="2022-11-10T00:56:27.385+0300" type="Warning"/>
        <logs message="WARNING: [HLS 200-471] Dataflow form checks found 3 issue(s) in file ./source/lab5_z1.c&#xD;&#xA;Resolution: For help on HLS 200-471 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.2;t=hls+guidance;d=200-471.html" projectName="lab5_z1" solutionName="pingpong" date="2022-11-10T00:56:23.608+0300" type="Warning"/>
        <logs message="WARNING: [HLS 214-114] Since the only kind of statements allowed in a canonical dataflow region are variable declarations and function calls, the compiler may not be able to correctly handle the region (./source/lab5_z1.c:39:1)&#xD;&#xA;Resolution: For help on HLS 214-114 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.2;t=hls+guidance;d=214-114.html" projectName="lab5_z1" solutionName="pingpong" date="2022-11-10T00:56:23.474+0300" type="Warning"/>
        <logs message="WARNING: [HLS 214-114] Since the only kind of statements allowed in a canonical dataflow region are variable declarations and function calls, the compiler may not be able to correctly handle the region (./source/lab5_z1.c:31:1)&#xD;&#xA;Resolution: For help on HLS 214-114 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.2;t=hls+guidance;d=214-114.html" projectName="lab5_z1" solutionName="pingpong" date="2022-11-10T00:56:23.464+0300" type="Warning"/>
        <logs message="WARNING: [HLS 214-114] Since the only kind of statements allowed in a canonical dataflow region are variable declarations and function calls, the compiler may not be able to correctly handle the region (./source/lab5_z1.c:20:1)&#xD;&#xA;Resolution: For help on HLS 214-114 see www.xilinx.com/cgi-bin/docs/rdoc?v=2021.2;t=hls+guidance;d=214-114.html" projectName="lab5_z1" solutionName="pingpong" date="2022-11-10T00:56:23.451+0300" type="Warning"/>
      </synLog>
      <simLog>
        <logs message="WARNING: [Simtcl 6-197] One or more HDL objects could not be logged because of object type or size limitations.  To see details please rerun the command with -verbose (-v).&#xD;&#xA;## set designtopgroup [add_wave_group &quot;Design Top Signals&quot;]&#xD;&#xA;## set coutputgroup [add_wave_group &quot;C Outputs&quot; -into $designtopgroup]&#xD;&#xA;## set return_group [add_wave_group return(axi_slave) -into $coutputgroup]&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out2_we1 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out2_q1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out2_d1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out2_ce1 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out2_address1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out2_we0 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out2_q0 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out2_d0 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out2_ce0 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out2_address0 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out1_we1 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out1_q1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out1_d1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out1_ce1 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out1_address1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out1_we0 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out1_q0 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out1_d0 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out1_ce0 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out1_address0 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/ap_local_deadlock -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/ap_local_block -into $return_group -radix hex&#xD;&#xA;## set cinputgroup [add_wave_group &quot;C Inputs&quot; -into $designtopgroup]&#xD;&#xA;## set return_group [add_wave_group return(memory) -into $cinputgroup]&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/scale -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_in_we1 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_in_q1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_in_d1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_in_ce1 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_in_address1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_in_we0 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_in_q0 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_in_d0 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_in_ce0 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_in_address0 -into $return_group -radix hex&#xD;&#xA;## set blocksiggroup [add_wave_group &quot;Block-level IO Handshake&quot; -into $designtopgroup]&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/ap_start -into $blocksiggroup&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/ap_done -into $blocksiggroup&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/ap_ready -into $blocksiggroup&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/ap_idle -into $blocksiggroup&#xD;&#xA;## set resetgroup [add_wave_group &quot;Reset&quot; -into $designtopgroup]&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/ap_rst -into $resetgroup&#xD;&#xA;## set clockgroup [add_wave_group &quot;Clock&quot; -into $designtopgroup]&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/ap_clk -into $clockgroup&#xD;&#xA;## set testbenchgroup [add_wave_group &quot;Test Bench Signals&quot;]&#xD;&#xA;## set tbinternalsiggroup [add_wave_group &quot;Internal Signals&quot; -into $testbenchgroup]&#xD;&#xA;## set tb_simstatus_group [add_wave_group &quot;Simulation Status&quot; -into $tbinternalsiggroup]&#xD;&#xA;## set tb_portdepth_group [add_wave_group &quot;Port Depth&quot; -into $tbinternalsiggroup]&#xD;&#xA;## add_wave /apatb_foo_m_top/AUTOTB_TRANSACTION_NUM -into $tb_simstatus_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/ready_cnt -into $tb_simstatus_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/done_cnt -into $tb_simstatus_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/LENGTH_data_in -into $tb_portdepth_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/LENGTH_scale -into $tb_portdepth_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/LENGTH_data_out1 -into $tb_portdepth_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/LENGTH_data_out2 -into $tb_portdepth_group -radix hex&#xD;&#xA;## set tbcoutputgroup [add_wave_group &quot;C Outputs&quot; -into $testbenchgroup]&#xD;&#xA;## set tb_return_group [add_wave_group return(axi_slave) -into $tbcoutputgroup]&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out2_we1 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out2_q1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out2_d1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out2_ce1 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out2_address1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out2_we0 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out2_q0 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out2_d0 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out2_ce0 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out2_address0 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out1_we1 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out1_q1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out1_d1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out1_ce1 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out1_address1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out1_we0 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out1_q0 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out1_d0 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out1_ce0 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out1_address0 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/ap_local_deadlock -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/ap_local_block -into $tb_return_group -radix hex&#xD;&#xA;## set tbcinputgroup [add_wave_group &quot;C Inputs&quot; -into $testbenchgroup]&#xD;&#xA;## set tb_return_group [add_wave_group return(memory) -into $tbcinputgroup]&#xD;&#xA;## add_wave /apatb_foo_m_top/scale -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_in_we1 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_in_q1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_in_d1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_in_ce1 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_in_address1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_in_we0 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_in_q0 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_in_d0 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_in_ce0 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_in_address0 -into $tb_return_group -radix hex&#xD;&#xA;## save_wave_config foo_m.wcfg&#xD;&#xA;## run all&#xD;&#xA;////////////////////////////////////////////////////////////////////////////////////&#xD;&#xA;// Inter-Transaction Progress: Completed Transaction / Total Transaction&#xD;&#xA;// Intra-Transaction Progress: Measured Latency / Latency Estimation * 100%&#xD;&#xA;//&#xD;&#xA;// RTL Simulation : &quot;Inter-Transaction Progress&quot; [&quot;Intra-Transaction Progress&quot;] @ &quot;Simulation Time&quot;&#xD;&#xA;////////////////////////////////////////////////////////////////////////////////////&#xD;&#xA;// RTL Simulation : 0 / 2 [0.00%] @ &quot;125000&quot;&#xD;&#xA;// RTL Simulation : 1 / 2 [0.01%] @ &quot;655575000&quot;&#xD;&#xA;// RTL Simulation : 2 / 2 [100.00%] @ &quot;1310955000&quot;&#xD;&#xA;////////////////////////////////////////////////////////////////////////////////////&#xD;&#xA;$finish called at time : 1311015 ns : File &quot;E:/Xilinx_trn/lab5_z1/lab5_z1/sol4_fifo/sim/verilog/foo_m.autotb.v&quot; Line 426&#xD;&#xA;run: Time (s): cpu = 00:00:32 ; elapsed = 00:00:32 . Memory (MB): peak = 1205.988 ; gain = 0.000&#xD;&#xA;## quit" projectName="lab5_z1" solutionName="sol4_fifo" date="2022-11-12T20:46:25.585+0300" type="Warning"/>
        <logs message="WARNING: [Simtcl 6-197] One or more HDL objects could not be logged because of object type or size limitations.  To see details please rerun the command with -verbose (-v).&#xD;&#xA;## set designtopgroup [add_wave_group &quot;Design Top Signals&quot;]&#xD;&#xA;## set coutputgroup [add_wave_group &quot;C Outputs&quot; -into $designtopgroup]&#xD;&#xA;## set return_group [add_wave_group return(axi_slave) -into $coutputgroup]&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out2_we1 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out2_q1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out2_d1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out2_ce1 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out2_address1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out2_we0 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out2_q0 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out2_d0 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out2_ce0 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out2_address0 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out1_we1 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out1_q1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out1_d1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out1_ce1 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out1_address1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out1_we0 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out1_q0 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out1_d0 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out1_ce0 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_out1_address0 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/ap_local_deadlock -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/ap_local_block -into $return_group -radix hex&#xD;&#xA;## set cinputgroup [add_wave_group &quot;C Inputs&quot; -into $designtopgroup]&#xD;&#xA;## set return_group [add_wave_group return(memory) -into $cinputgroup]&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/scale -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_in_we1 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_in_q1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_in_d1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_in_ce1 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_in_address1 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_in_we0 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_in_q0 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_in_d0 -into $return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_in_ce0 -into $return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/data_in_address0 -into $return_group -radix hex&#xD;&#xA;## set blocksiggroup [add_wave_group &quot;Block-level IO Handshake&quot; -into $designtopgroup]&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/ap_start -into $blocksiggroup&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/ap_done -into $blocksiggroup&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/ap_ready -into $blocksiggroup&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/ap_idle -into $blocksiggroup&#xD;&#xA;## set resetgroup [add_wave_group &quot;Reset&quot; -into $designtopgroup]&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/ap_rst -into $resetgroup&#xD;&#xA;## set clockgroup [add_wave_group &quot;Clock&quot; -into $designtopgroup]&#xD;&#xA;## add_wave /apatb_foo_m_top/AESL_inst_foo_m/ap_clk -into $clockgroup&#xD;&#xA;## set testbenchgroup [add_wave_group &quot;Test Bench Signals&quot;]&#xD;&#xA;## set tbinternalsiggroup [add_wave_group &quot;Internal Signals&quot; -into $testbenchgroup]&#xD;&#xA;## set tb_simstatus_group [add_wave_group &quot;Simulation Status&quot; -into $tbinternalsiggroup]&#xD;&#xA;## set tb_portdepth_group [add_wave_group &quot;Port Depth&quot; -into $tbinternalsiggroup]&#xD;&#xA;## add_wave /apatb_foo_m_top/AUTOTB_TRANSACTION_NUM -into $tb_simstatus_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/ready_cnt -into $tb_simstatus_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/done_cnt -into $tb_simstatus_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/LENGTH_data_in -into $tb_portdepth_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/LENGTH_scale -into $tb_portdepth_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/LENGTH_data_out1 -into $tb_portdepth_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/LENGTH_data_out2 -into $tb_portdepth_group -radix hex&#xD;&#xA;## set tbcoutputgroup [add_wave_group &quot;C Outputs&quot; -into $testbenchgroup]&#xD;&#xA;## set tb_return_group [add_wave_group return(axi_slave) -into $tbcoutputgroup]&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out2_we1 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out2_q1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out2_d1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out2_ce1 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out2_address1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out2_we0 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out2_q0 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out2_d0 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out2_ce0 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out2_address0 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out1_we1 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out1_q1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out1_d1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out1_ce1 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out1_address1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out1_we0 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out1_q0 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out1_d0 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out1_ce0 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_out1_address0 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/ap_local_deadlock -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/ap_local_block -into $tb_return_group -radix hex&#xD;&#xA;## set tbcinputgroup [add_wave_group &quot;C Inputs&quot; -into $testbenchgroup]&#xD;&#xA;## set tb_return_group [add_wave_group return(memory) -into $tbcinputgroup]&#xD;&#xA;## add_wave /apatb_foo_m_top/scale -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_in_we1 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_in_q1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_in_d1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_in_ce1 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_in_address1 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_in_we0 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_in_q0 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_in_d0 -into $tb_return_group -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_in_ce0 -into $tb_return_group -color #ffff00 -radix hex&#xD;&#xA;## add_wave /apatb_foo_m_top/data_in_address0 -into $tb_return_group -radix hex&#xD;&#xA;## save_wave_config foo_m.wcfg&#xD;&#xA;## run all&#xD;&#xA;////////////////////////////////////////////////////////////////////////////////////&#xD;&#xA;// Inter-Transaction Progress: Completed Transaction / Total Transaction&#xD;&#xA;// Intra-Transaction Progress: Measured Latency / Latency Estimation * 100%&#xD;&#xA;//&#xD;&#xA;// RTL Simulation : &quot;Inter-Transaction Progress&quot; [&quot;Intra-Transaction Progress&quot;] @ &quot;Simulation Time&quot;&#xD;&#xA;////////////////////////////////////////////////////////////////////////////////////&#xD;&#xA;// RTL Simulation : 0 / 2 [0.00%] @ &quot;125000&quot;&#xD;&#xA;// RTL Simulation : 1 / 2 [0.01%] @ &quot;655575000&quot;&#xD;&#xA;// RTL Simulation : 2 / 2 [100.00%] @ &quot;1310955000&quot;&#xD;&#xA;////////////////////////////////////////////////////////////////////////////////////&#xD;&#xA;$finish called at time : 1311015 ns : File &quot;E:/Xilinx_trn/lab5_z1/lab5_z1/fifo/sim/verilog/foo_m.autotb.v&quot; Line 426&#xD;&#xA;run: Time (s): cpu = 00:00:24 ; elapsed = 00:00:24 . Memory (MB): peak = 1206.152 ; gain = 0.000&#xD;&#xA;## quit" projectName="lab5_z1" solutionName="fifo" date="2022-11-10T01:06:10.828+0300" type="Warning"/>
      </simLog>
      <mgLog/>
      <packageLog/>
      <csimLog/>
    </logs>
  </warningLogs>
</vivadoHLSLog:LogRoot>
