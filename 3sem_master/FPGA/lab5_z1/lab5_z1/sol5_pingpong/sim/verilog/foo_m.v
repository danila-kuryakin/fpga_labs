// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="foo_m_foo_m,hls_ip_2021_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xa7a12t-csg325-1Q,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.470000,HLS_SYN_LAT=163845,HLS_SYN_TPT=65538,HLS_SYN_MEM=192,HLS_SYN_DSP=0,HLS_SYN_FF=303,HLS_SYN_LUT=421,HLS_VERSION=2021_2}" *)

module foo_m (
        ap_local_block,
        ap_local_deadlock,
        ap_clk,
        ap_rst,
        data_in_address0,
        data_in_ce0,
        data_in_d0,
        data_in_q0,
        data_in_we0,
        data_in_address1,
        data_in_ce1,
        data_in_d1,
        data_in_q1,
        data_in_we1,
        scale,
        data_out1_address0,
        data_out1_ce0,
        data_out1_d0,
        data_out1_q0,
        data_out1_we0,
        data_out1_address1,
        data_out1_ce1,
        data_out1_d1,
        data_out1_q1,
        data_out1_we1,
        data_out2_address0,
        data_out2_ce0,
        data_out2_d0,
        data_out2_q0,
        data_out2_we0,
        data_out2_address1,
        data_out2_ce1,
        data_out2_d1,
        data_out2_q1,
        data_out2_we1,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle
);


output   ap_local_block;
output   ap_local_deadlock;
input   ap_clk;
input   ap_rst;
output  [13:0] data_in_address0;
output   data_in_ce0;
output  [31:0] data_in_d0;
input  [31:0] data_in_q0;
output   data_in_we0;
output  [13:0] data_in_address1;
output   data_in_ce1;
output  [31:0] data_in_d1;
input  [31:0] data_in_q1;
output   data_in_we1;
input  [31:0] scale;
output  [13:0] data_out1_address0;
output   data_out1_ce0;
output  [31:0] data_out1_d0;
input  [31:0] data_out1_q0;
output   data_out1_we0;
output  [13:0] data_out1_address1;
output   data_out1_ce1;
output  [31:0] data_out1_d1;
input  [31:0] data_out1_q1;
output   data_out1_we1;
output  [13:0] data_out2_address0;
output   data_out2_ce0;
output  [31:0] data_out2_d0;
input  [31:0] data_out2_q0;
output   data_out2_we0;
output  [13:0] data_out2_address1;
output   data_out2_ce1;
output  [31:0] data_out2_d1;
input  [31:0] data_out2_q1;
output   data_out2_we1;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;

wire   [31:0] temp1_i_q0;
wire   [31:0] temp1_t_q0;
wire   [31:0] temp2_i_q0;
wire   [31:0] temp2_t_q0;
wire   [31:0] temp3_i_q0;
wire   [31:0] temp3_t_q0;
wire    Loop_Loop1_proc_U0_ap_start;
wire    Loop_Loop1_proc_U0_ap_done;
wire    Loop_Loop1_proc_U0_ap_continue;
wire    Loop_Loop1_proc_U0_ap_idle;
wire    Loop_Loop1_proc_U0_ap_ready;
wire   [13:0] Loop_Loop1_proc_U0_data_in_address0;
wire    Loop_Loop1_proc_U0_data_in_ce0;
wire   [13:0] Loop_Loop1_proc_U0_temp1_address0;
wire    Loop_Loop1_proc_U0_temp1_ce0;
wire    Loop_Loop1_proc_U0_temp1_we0;
wire   [31:0] Loop_Loop1_proc_U0_temp1_d0;
wire    split_U0_ap_start;
wire    split_U0_ap_done;
wire    split_U0_ap_continue;
wire    split_U0_ap_idle;
wire    split_U0_ap_ready;
wire   [13:0] split_U0_in_r_address0;
wire    split_U0_in_r_ce0;
wire   [13:0] split_U0_out1_address0;
wire    split_U0_out1_ce0;
wire    split_U0_out1_we0;
wire   [31:0] split_U0_out1_d0;
wire   [13:0] split_U0_out2_address0;
wire    split_U0_out2_ce0;
wire    split_U0_out2_we0;
wire   [31:0] split_U0_out2_d0;
wire    ap_channel_done_temp3;
wire    split_U0_out2_full_n;
reg    ap_sync_reg_channel_write_temp3;
wire    ap_sync_channel_write_temp3;
wire    ap_channel_done_temp2;
wire    split_U0_out1_full_n;
reg    ap_sync_reg_channel_write_temp2;
wire    ap_sync_channel_write_temp2;
wire    Loop_Loop2_proc_U0_ap_start;
wire    Loop_Loop2_proc_U0_ap_done;
wire    Loop_Loop2_proc_U0_ap_continue;
wire    Loop_Loop2_proc_U0_ap_idle;
wire    Loop_Loop2_proc_U0_ap_ready;
wire   [13:0] Loop_Loop2_proc_U0_temp2_address0;
wire    Loop_Loop2_proc_U0_temp2_ce0;
wire   [13:0] Loop_Loop2_proc_U0_data_out1_address0;
wire    Loop_Loop2_proc_U0_data_out1_ce0;
wire    Loop_Loop2_proc_U0_data_out1_we0;
wire   [31:0] Loop_Loop2_proc_U0_data_out1_d0;
wire    Loop_Loop3_proc_U0_ap_start;
wire    Loop_Loop3_proc_U0_ap_done;
wire    Loop_Loop3_proc_U0_ap_continue;
wire    Loop_Loop3_proc_U0_ap_idle;
wire    Loop_Loop3_proc_U0_ap_ready;
wire   [13:0] Loop_Loop3_proc_U0_temp3_address0;
wire    Loop_Loop3_proc_U0_temp3_ce0;
wire   [13:0] Loop_Loop3_proc_U0_data_out2_address0;
wire    Loop_Loop3_proc_U0_data_out2_ce0;
wire    Loop_Loop3_proc_U0_data_out2_we0;
wire   [31:0] Loop_Loop3_proc_U0_data_out2_d0;
wire    temp1_i_full_n;
wire    temp1_t_empty_n;
wire    temp2_i_full_n;
wire    temp2_t_empty_n;
wire    temp3_i_full_n;
wire    temp3_t_empty_n;
wire    ap_sync_done;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_temp3 = 1'b0;
#0 ap_sync_reg_channel_write_temp2 = 1'b0;
end

foo_m_temp1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
temp1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_Loop1_proc_U0_temp1_address0),
    .i_ce0(Loop_Loop1_proc_U0_temp1_ce0),
    .i_we0(Loop_Loop1_proc_U0_temp1_we0),
    .i_d0(Loop_Loop1_proc_U0_temp1_d0),
    .i_q0(temp1_i_q0),
    .t_address0(split_U0_in_r_address0),
    .t_ce0(split_U0_in_r_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(temp1_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(temp1_i_full_n),
    .i_write(Loop_Loop1_proc_U0_ap_done),
    .t_empty_n(temp1_t_empty_n),
    .t_read(split_U0_ap_ready)
);

foo_m_temp1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
temp2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(split_U0_out1_address0),
    .i_ce0(split_U0_out1_ce0),
    .i_we0(split_U0_out1_we0),
    .i_d0(split_U0_out1_d0),
    .i_q0(temp2_i_q0),
    .t_address0(Loop_Loop2_proc_U0_temp2_address0),
    .t_ce0(Loop_Loop2_proc_U0_temp2_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(temp2_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(temp2_i_full_n),
    .i_write(ap_channel_done_temp2),
    .t_empty_n(temp2_t_empty_n),
    .t_read(Loop_Loop2_proc_U0_ap_ready)
);

foo_m_temp1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16384 ),
    .AddressWidth( 14 ))
temp3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(split_U0_out2_address0),
    .i_ce0(split_U0_out2_ce0),
    .i_we0(split_U0_out2_we0),
    .i_d0(split_U0_out2_d0),
    .i_q0(temp3_i_q0),
    .t_address0(Loop_Loop3_proc_U0_temp3_address0),
    .t_ce0(Loop_Loop3_proc_U0_temp3_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(temp3_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(temp3_i_full_n),
    .i_write(ap_channel_done_temp3),
    .t_empty_n(temp3_t_empty_n),
    .t_read(Loop_Loop3_proc_U0_ap_ready)
);

foo_m_Loop_Loop1_proc Loop_Loop1_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Loop_Loop1_proc_U0_ap_start),
    .ap_done(Loop_Loop1_proc_U0_ap_done),
    .ap_continue(Loop_Loop1_proc_U0_ap_continue),
    .ap_idle(Loop_Loop1_proc_U0_ap_idle),
    .ap_ready(Loop_Loop1_proc_U0_ap_ready),
    .data_in_address0(Loop_Loop1_proc_U0_data_in_address0),
    .data_in_ce0(Loop_Loop1_proc_U0_data_in_ce0),
    .data_in_q0(data_in_q0),
    .scale(scale),
    .temp1_address0(Loop_Loop1_proc_U0_temp1_address0),
    .temp1_ce0(Loop_Loop1_proc_U0_temp1_ce0),
    .temp1_we0(Loop_Loop1_proc_U0_temp1_we0),
    .temp1_d0(Loop_Loop1_proc_U0_temp1_d0)
);

foo_m_split split_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(split_U0_ap_start),
    .ap_done(split_U0_ap_done),
    .ap_continue(split_U0_ap_continue),
    .ap_idle(split_U0_ap_idle),
    .ap_ready(split_U0_ap_ready),
    .in_r_address0(split_U0_in_r_address0),
    .in_r_ce0(split_U0_in_r_ce0),
    .in_r_q0(temp1_t_q0),
    .out1_address0(split_U0_out1_address0),
    .out1_ce0(split_U0_out1_ce0),
    .out1_we0(split_U0_out1_we0),
    .out1_d0(split_U0_out1_d0),
    .out2_address0(split_U0_out2_address0),
    .out2_ce0(split_U0_out2_ce0),
    .out2_we0(split_U0_out2_we0),
    .out2_d0(split_U0_out2_d0)
);

foo_m_Loop_Loop2_proc Loop_Loop2_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Loop_Loop2_proc_U0_ap_start),
    .ap_done(Loop_Loop2_proc_U0_ap_done),
    .ap_continue(Loop_Loop2_proc_U0_ap_continue),
    .ap_idle(Loop_Loop2_proc_U0_ap_idle),
    .ap_ready(Loop_Loop2_proc_U0_ap_ready),
    .temp2_address0(Loop_Loop2_proc_U0_temp2_address0),
    .temp2_ce0(Loop_Loop2_proc_U0_temp2_ce0),
    .temp2_q0(temp2_t_q0),
    .data_out1_address0(Loop_Loop2_proc_U0_data_out1_address0),
    .data_out1_ce0(Loop_Loop2_proc_U0_data_out1_ce0),
    .data_out1_we0(Loop_Loop2_proc_U0_data_out1_we0),
    .data_out1_d0(Loop_Loop2_proc_U0_data_out1_d0)
);

foo_m_Loop_Loop3_proc Loop_Loop3_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Loop_Loop3_proc_U0_ap_start),
    .ap_done(Loop_Loop3_proc_U0_ap_done),
    .ap_continue(Loop_Loop3_proc_U0_ap_continue),
    .ap_idle(Loop_Loop3_proc_U0_ap_idle),
    .ap_ready(Loop_Loop3_proc_U0_ap_ready),
    .temp3_address0(Loop_Loop3_proc_U0_temp3_address0),
    .temp3_ce0(Loop_Loop3_proc_U0_temp3_ce0),
    .temp3_q0(temp3_t_q0),
    .data_out2_address0(Loop_Loop3_proc_U0_data_out2_address0),
    .data_out2_ce0(Loop_Loop3_proc_U0_data_out2_ce0),
    .data_out2_we0(Loop_Loop3_proc_U0_data_out2_we0),
    .data_out2_d0(Loop_Loop3_proc_U0_data_out2_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_temp2 <= 1'b0;
    end else begin
        if (((split_U0_ap_done & split_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_temp2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_temp2 <= ap_sync_channel_write_temp2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_temp3 <= 1'b0;
    end else begin
        if (((split_U0_ap_done & split_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_temp3 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_temp3 <= ap_sync_channel_write_temp3;
        end
    end
end

assign Loop_Loop1_proc_U0_ap_continue = temp1_i_full_n;

assign Loop_Loop1_proc_U0_ap_start = ap_start;

assign Loop_Loop2_proc_U0_ap_continue = ap_sync_done;

assign Loop_Loop2_proc_U0_ap_start = temp2_t_empty_n;

assign Loop_Loop3_proc_U0_ap_continue = ap_sync_done;

assign Loop_Loop3_proc_U0_ap_start = temp3_t_empty_n;

assign ap_channel_done_temp2 = (split_U0_ap_done & (ap_sync_reg_channel_write_temp2 ^ 1'b1));

assign ap_channel_done_temp3 = (split_U0_ap_done & (ap_sync_reg_channel_write_temp3 ^ 1'b1));

assign ap_done = ap_sync_done;

assign ap_idle = (split_U0_ap_idle & (temp3_t_empty_n ^ 1'b1) & (temp2_t_empty_n ^ 1'b1) & (temp1_t_empty_n ^ 1'b1) & Loop_Loop3_proc_U0_ap_idle & Loop_Loop2_proc_U0_ap_idle & Loop_Loop1_proc_U0_ap_idle);

assign ap_local_block = 1'b0;

assign ap_local_deadlock = 1'b0;

assign ap_ready = Loop_Loop1_proc_U0_ap_ready;

assign ap_sync_channel_write_temp2 = ((split_U0_out1_full_n & ap_channel_done_temp2) | ap_sync_reg_channel_write_temp2);

assign ap_sync_channel_write_temp3 = ((split_U0_out2_full_n & ap_channel_done_temp3) | ap_sync_reg_channel_write_temp3);

assign ap_sync_done = (Loop_Loop3_proc_U0_ap_done & Loop_Loop2_proc_U0_ap_done);

assign data_in_address0 = Loop_Loop1_proc_U0_data_in_address0;

assign data_in_address1 = 14'd0;

assign data_in_ce0 = Loop_Loop1_proc_U0_data_in_ce0;

assign data_in_ce1 = 1'b0;

assign data_in_d0 = 32'd0;

assign data_in_d1 = 32'd0;

assign data_in_we0 = 1'b0;

assign data_in_we1 = 1'b0;

assign data_out1_address0 = Loop_Loop2_proc_U0_data_out1_address0;

assign data_out1_address1 = 14'd0;

assign data_out1_ce0 = Loop_Loop2_proc_U0_data_out1_ce0;

assign data_out1_ce1 = 1'b0;

assign data_out1_d0 = Loop_Loop2_proc_U0_data_out1_d0;

assign data_out1_d1 = 32'd0;

assign data_out1_we0 = Loop_Loop2_proc_U0_data_out1_we0;

assign data_out1_we1 = 1'b0;

assign data_out2_address0 = Loop_Loop3_proc_U0_data_out2_address0;

assign data_out2_address1 = 14'd0;

assign data_out2_ce0 = Loop_Loop3_proc_U0_data_out2_ce0;

assign data_out2_ce1 = 1'b0;

assign data_out2_d0 = Loop_Loop3_proc_U0_data_out2_d0;

assign data_out2_d1 = 32'd0;

assign data_out2_we0 = Loop_Loop3_proc_U0_data_out2_we0;

assign data_out2_we1 = 1'b0;

assign split_U0_ap_continue = (ap_sync_channel_write_temp3 & ap_sync_channel_write_temp2);

assign split_U0_ap_start = temp1_t_empty_n;

assign split_U0_out1_full_n = temp2_i_full_n;

assign split_U0_out2_full_n = temp3_i_full_n;

endmodule //foo_m
