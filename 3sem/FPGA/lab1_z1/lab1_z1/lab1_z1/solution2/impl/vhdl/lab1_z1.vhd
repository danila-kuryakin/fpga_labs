-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity lab1_z1 is
port (
    ap_local_block : OUT STD_LOGIC;
    ap_local_deadlock : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    a : IN STD_LOGIC_VECTOR (15 downto 0);
    b : IN STD_LOGIC_VECTOR (15 downto 0);
    c : IN STD_LOGIC_VECTOR (15 downto 0);
    d : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of lab1_z1 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "lab1_z1_lab1_z1,hls_ip_2021_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xa7a12t-csg325-1Q,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.241500,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=60,HLS_VERSION=2021_2}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal sext_ln5_fu_48_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln5_2_fu_56_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln5_fu_64_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln5_4_fu_70_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln5_1_fu_52_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln5_1_fu_74_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln5_3_fu_60_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal y_fu_80_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_ce_reg : STD_LOGIC;


begin



    add_ln5_1_fu_74_p2 <= std_logic_vector(signed(sext_ln5_4_fu_70_p1) + signed(sext_ln5_1_fu_52_p1));
    add_ln5_fu_64_p2 <= std_logic_vector(signed(sext_ln5_fu_48_p1) + signed(sext_ln5_2_fu_56_p1));
    ap_done <= ap_start;
    ap_idle <= ap_const_logic_1;
    ap_local_block <= ap_const_logic_0;
    ap_local_deadlock <= ap_const_logic_0;
    ap_ready <= ap_start;
        ap_return <= std_logic_vector(IEEE.numeric_std.resize(signed(y_fu_80_p2),32));

        sext_ln5_1_fu_52_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b),18));

        sext_ln5_2_fu_56_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(c),17));

        sext_ln5_3_fu_60_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(d),18));

        sext_ln5_4_fu_70_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln5_fu_64_p2),18));

        sext_ln5_fu_48_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(a),17));

    y_fu_80_p2 <= std_logic_vector(unsigned(add_ln5_1_fu_74_p2) - unsigned(sext_ln5_3_fu_60_p1));
end behav;
